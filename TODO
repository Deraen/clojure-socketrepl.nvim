TODO alpha
	[X] Move all of the socket repl stuff to a plugin project
	[X] Make buffer-get-text-async work, just test it at the repl
	[X] Get "eval-code" working
	[X] Figure out how to accumulate / display results in vim
		[X] append it all to a file
		[X] preferably a temp file (could be a lot of data)
		[X] `:ShowRepl`
			no vimscript, invoke a plugin function
			show the contents of the temp file in the current buffer
			make it autoread
	[X] Name vim functions correctly
	[X] create prod & debug plugin.vim
	[X] add debug switch (var) to socket-repl-plugin.clj
    [X] errors in the middle of a buffer
    can be lost - wrap in eval?
	[X] implement doc (word under cursor)
	Results buffer
		A single buffer, like NerdTree, but on far right
			`show-log`
			[X] Only display if not already visible
				use `buffer-visible?-async`
				[X] not working, might need buffer property
					buffer created by terminal has name we can't control
					we could read it back in and store it
				if not, :botright vnew, existing command
		[_] After showing the log, return cursor to original buffer
			Use it first, see if this feels right
		[X] Closes (hides) with q? some other mapping?
			Use it w/ q for now, see if something else better
		[X] Auto-show any time an eval, doc, happens
		[_] Add docs for this & customization story
	[X] Pass host, port in connect
		[X] Make sure :Connect works with no args, or host:port arg
		[X] Update debug vimscript
	[_] Update README
		[X] Move NVIM_LISTEN... stuff to a debug section
		[_] demo video
		[_] architecture diagram
			nvim<--msgpack/stdio-->plugin(jar)<--localhost:5555-->socketrepl
	[_] Error handle repl server not running
	[_] Script debugging
		open nvim w/ NVIM_LISTEN_ADDRESS
			can we source debug vimscript from CLI?
		start repl to clojure-socketrepl.nvim on 5555
		load a ns which calls `user/go` to localhost 7777
		How to reset state?
			repl, rerun `connect!`, maybe just `go`
			nvim channel 1 will be fubar, how to replace?
				debug script when sourced increments channel

TODO next
	[_] Rather than explicit repl output logging, can we intercept
		channel
		stream implementation
	[X] Shut down the plugin if no input received for one minute
	[X] evaluate form under cursor
